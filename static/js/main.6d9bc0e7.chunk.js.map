{"version":3,"sources":["components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","prop","useState","nav_textcolor","nav_backgroundColor","textarea_background","textarea_textcolor","button_color","mystyle","setmystyle","setText","bold_text","setbold_text","italics_text","setitalics_text","WordCount","setWordCount","style","className","padding","href","fontSize","margin","color","backgroundColor","paddingTop","paddingRight","id","role","onClick","document","body","htmlFor","onChange","string_","getElementById","value","replace","trim","length","res","split","rows","placeholder","event","target","type","x","fontWeight","fontStyle","toUpperCase","toLowerCase","str","i","charAt","slice","join","titleCase","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kNAGe,SAASA,EAAOC,GAGvB,MAA8BC,mBAC9B,CACIC,cAAc,QACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,mBAAmB,UACnBC,aAAa,KANjB,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,EAAwBP,mBAAS,IAAjC,mBAAaQ,GAAb,WA2EA,EAAkCR,mBAAS,QAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAeA,EAAwCV,mBAAS,WAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KA+CA,EAAkCZ,mBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KAgBA,OACI,qCACJ,qBAAKC,MAAOT,EAAZ,SACI,sBAAKU,UAAU,2BAA2BD,MAAkB,CAACE,QAAe,GAA5E,UACA,mBAAGD,UAAU,eAAeE,KAAK,IAAKH,MAAS,CAACI,SAAW,OAAQC,OAAO,EAAEC,MAAQf,EAAQL,cACxFqB,gBAAiBhB,EAAQJ,oBAAoBqB,WAAW,IAAMC,aAAc,OADhF,6BAGA,qBAAKR,UAAU,4BAA8BS,GAAG,yBAAyBV,MAAS,CAACO,gBAAgBhB,EAAQJ,qBAA3G,SACA,oBAAIc,UAAU,qBAAd,SACI,qBAAIA,UAAU,oBAAd,UAEA,mBAAGA,UAAU,2BAA4BD,MAAe,CAACM,MAAMf,EAAQL,cAAckB,SAAW,OAAQC,OAAO,GAAKF,KAAK,IAAIO,GAAG,iBAAiBC,KAAK,SAAS,cAAY,WAAW,gBAAc,OAAO,gBAAc,QAAzN,oBAIA,sBAAKV,UAAU,gBAAgBD,MAAO,CAACE,QAAe,GAAK,kBAAgB,iBAA3E,UAEI,mBAAGD,UAAU,gBAAgBE,KAAK,IAAIS,QAvKlC,WACZpB,EAAW,CACPN,cAAc,UACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,mBAAmB,UACnBC,aAAa,KAEjBuB,SAASC,KAAKd,MAAMO,gBAAkB,WA+J0BP,MAAO,CAACI,SAAS,OAAQG,gBAAgB,UAAWD,MAAM,SAAlH,yBAEA,mBAAGL,UAAU,gBAAgBE,KAAK,IAAIS,QAlJhC,WACdpB,EAAW,CACPN,cAAc,QACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,mBAAmB,SACnBC,aAAa,KAEjBuB,SAASC,KAAKd,MAAMO,gBAAkB,WA0I8BP,MAAO,CAACI,SAAS,OAAQG,gBAAgB,UAAWD,MAAM,SAAtH,0BAEA,mBAAGL,UAAU,gBAAgBE,KAAK,IAAIS,QAnHjC,WACbpB,EAAW,CACPN,cAAc,UACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,mBAAmB,UACnBC,aAAa,KAEjBuB,SAASC,KAAKd,MAAMO,gBAAkB,WA2G2BP,MAAO,CAACI,SAAS,OAAQG,gBAAgB,UAAWD,MAAM,SAAnH,wBAEA,mBAAGL,UAAU,gBAAgBE,KAAK,IAAIS,QAlKlC,WACZpB,EAAW,CACPN,cAAc,UACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,mBAAmB,SACnBC,aAAa,KAEjBuB,SAASC,KAAKd,MAAMO,gBAAkB,WA0J4BP,MAAO,CAACI,SAAS,OAAQG,gBAAgB,UAAWD,MAAM,SAApH,uBAEA,mBAAGL,UAAU,gBAAgBE,KAAK,IAAIS,QAlIhC,WACdpB,EAAW,CACPN,cAAc,UACdC,oBAAoB,UACpBC,oBAAoB,UACpBC,mBAAmB,QACnBC,aAAa,KAEjBuB,SAASC,KAAKd,MAAMO,gBAAkB,WA0H4BP,MAAO,CAACI,SAAS,OAAQG,gBAAgB,UAAWD,MAAM,SAApH,0BAEA,mBAAGL,UAAU,gBAAgBE,KAAK,IAAIS,QA/IjC,WACbpB,EAAW,CACPN,cAAc,QACdC,oBAAoB,QACpBC,oBAAoB,UACpBC,mBAAmB,UACnBC,aAAa,KAEjBuB,SAASC,KAAKd,MAAMO,gBAAkB,WAuI2BP,MAAO,CAACI,SAAS,OAAQG,gBAAgB,QAASD,MAAM,SAAjH,wCAQZ,sBAAKL,UAAU,uCAAf,UACI,wBAAOc,QAAQ,8BAAf,UAA6C,uBAAM,uBAAM,0BACzD,0BAAUd,UAAU,yBAAyBe,SAnD5B,WACjB,IAAIC,EAAUJ,SAASK,eAAe,cAAcC,MAIpD,GAAsB,KAFtBF,EAAUA,EAAQG,QAAQ,OAAQ,KAAKC,QAE5BC,OAAX,CAIA,IAAIC,EAAMN,EAAQO,MAAM,KAExBzB,EAAawB,EAAID,aALbvB,EAAa,IA8CbC,MAAO,CAACM,MAAMf,EAAQF,mBAClBkB,gBAAgBhB,EAAQH,oBACxBgB,SAAS,QACbM,GAAG,aAAae,KAAK,KACrBC,YAAY,0BAA0Bd,QA7HzB,SAACe,GAElBlC,EAAQkC,EAAMC,OAAOT,aA8HzB,sBAAKlB,UAAU,kBAAf,UAEI,wBAAQ4B,KAAK,SAAS5B,UAAU,yBACxBD,MAAS,CAAEO,gBAAiBhB,EAAQJ,qBACpCyB,QA7HI,WACZ,IAAIkB,EAAIjB,SAASK,eAAe,cAEnB,QADAY,EAAE9B,MAAM+B,YAEjBD,EAAE9B,MAAM+B,WAAa,SACrBpC,EAAa,UAGbmC,EAAE9B,MAAM+B,WAAa,OACrBpC,EAAa,YAkHjB,SAE6B,iCAASD,MAEtC,wBAAQmC,KAAK,SAAS5B,UAAU,8BACxBD,MAAS,CAAEO,gBAAiBhB,EAAQJ,qBACpCyB,QAlHO,WACf,IAAIkB,EAAIjB,SAASK,eAAe,cAEvB,UADAY,EAAE9B,MAAMgC,WAEbF,EAAE9B,MAAMgC,UAAY,SACpBnC,EAAgB,YAGhBiC,EAAE9B,MAAMgC,UAAY,SACpBnC,EAAgB,YAuGpB,SAEgC,4BAAID,MAEnC,wBAAQiC,KAAK,SAAS5B,UAAU,8BACzBD,MAAS,CAAEO,gBAAiBhB,EAAQJ,qBACpCyB,QAzGI,WACZ,IAAIkB,EAAIjB,SAASK,eAAe,cAChCY,EAAEX,MAAQW,EAAEX,MAAMc,eAqGjB,uBAID,wBAAQJ,KAAK,SAAS5B,UAAU,8BACxBD,MAAS,CAAEO,gBAAiBhB,EAAQJ,qBACpCyB,QAxGI,WACZ,IAAIkB,EAAIjB,SAASK,eAAe,cAChCY,EAAEX,MAAQW,EAAEX,MAAMe,eAoGlB,uBAGA,wBAAQL,KAAK,SAAS5B,UAAU,8BACxBD,MAAS,CAAEO,gBAAiBhB,EAAQJ,qBACpCyB,QA9FO,WACf,IAAIkB,EAAIjB,SAASK,eAAe,cAChCY,EAAEX,MAVU,SAACgB,GACbA,EAAMA,EAAID,cAAcV,MAAM,KAC9B,IAAK,IAAIY,EAAI,EAAGA,EAAID,EAAIb,OAAQc,IAC9BD,EAAIC,GAAKD,EAAIC,GAAGC,OAAO,GAAGJ,cAAgBE,EAAIC,GAAGE,MAAM,GAEzD,OAAOH,EAAII,KAAK,KAKNC,CAAUV,EAAEX,QA0FtB,uBAKA,wBAAQU,KAAK,SAAS5B,UAAU,8BACxBD,MAAS,CAAEO,gBAAiBhB,EAAQJ,qBACpCyB,QA9FM,WACNC,SAASK,eAAe,cAC9BC,MAAQ,IA0FV,sBAMJ,qBAAKlB,UAAU,YAAYD,MAAQ,CAACM,MAAM,QAASF,SAAS,QAA5D,SACI,gDAAmBN,UCtOhB2C,MARf,WACE,OACE,mCACE,cAAC1D,EAAD,OCKS2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASK,eAAe,SAM1BwB,K","file":"static/js/main.6d9bc0e7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function NavBar(prop) {\r\n\r\n    \r\n        const [mystyle, setmystyle] = useState(\r\n        {\r\n            nav_textcolor:'white', \r\n            nav_backgroundColor:'#29a8ab', \r\n            textarea_background:'#eeeeee',\r\n            textarea_textcolor:'#586686',\r\n            button_color:'',\r\n        })\r\n        \r\n        const [Text, setText] = useState(\"\");\r\n\r\n\r\n        const to_blue = () =>{\r\n            setmystyle({\r\n                nav_textcolor:'#8ecae6', \r\n                nav_backgroundColor:'#3b7dd8', \r\n                textarea_background:'#c7eafa',\r\n                textarea_textcolor:'#023047',\r\n                button_color:''\r\n            });\r\n            document.body.style.backgroundColor = '#8ecae6';\r\n        }\r\n        \r\n        const to_pink = () =>{\r\n            setmystyle({\r\n                nav_textcolor:'#ffc1c6', \r\n                nav_backgroundColor:'#fe009a', \r\n                textarea_background:'#f0c0fe',\r\n                textarea_textcolor:'purple',\r\n                button_color:''\r\n            });\r\n            document.body.style.backgroundColor = '#ff99cc';\r\n        }\r\n        \r\n        \r\n        const to_yellow = () =>{\r\n            setmystyle({\r\n                nav_textcolor:'white', \r\n                nav_backgroundColor:'#ffc30b', \r\n                textarea_background:'#fcf4a3',\r\n                textarea_textcolor:'indigo',\r\n                button_color:'',\r\n            });\r\n            document.body.style.backgroundColor = '#f9de7e';\r\n        }\r\n        \r\n        const to_black = () =>{\r\n            setmystyle({\r\n                nav_textcolor:'white', \r\n                nav_backgroundColor:'black', \r\n                textarea_background:'#faf9f6',\r\n                textarea_textcolor:'#000000',\r\n                button_color:''\r\n            });\r\n            document.body.style.backgroundColor = '#333333';\r\n        }\r\n\r\n        const to_purple = () =>{\r\n            setmystyle({\r\n                nav_textcolor:'#c9a4d4', \r\n                nav_backgroundColor:'#371f76', \r\n                textarea_background:'#643b9f',\r\n                textarea_textcolor:'white',\r\n                button_color:''\r\n            });\r\n            document.body.style.backgroundColor = '#c9a4d4';\r\n        }\r\n        \r\n        const to_green = () =>{\r\n            setmystyle({\r\n                nav_textcolor:'#8cdba9', \r\n                nav_backgroundColor:'#00917c', \r\n                textarea_background:'#dff5ce',\r\n                textarea_textcolor:'#004953',\r\n                button_color:''\r\n            });\r\n            document.body.style.backgroundColor = '#8cdba9';\r\n        }\r\n        \r\n        const handleChange = (event) =>{\r\n            // console.log('onchange called');\r\n            setText(event.target.value);\r\n        }\r\n\r\n        const [bold_text, setbold_text] = useState(\"Bold\")\r\n\r\n        const to_bold = ()=>{\r\n            let x = document.getElementById(\"textAreaId\");\r\n            let weight = x.style.fontWeight;\r\n            if(weight == 'bold'){\r\n                x.style.fontWeight = 'normal';\r\n                setbold_text(\"Bold\")\r\n            }\r\n            else{\r\n                x.style.fontWeight = 'bold';\r\n                setbold_text(\"Unbold\")\r\n            }\r\n        }\r\n\r\n        const [italics_text, setitalics_text] = useState(\"Italics\")\r\n\r\n        const to_italics = ()=>{\r\n            let x = document.getElementById(\"textAreaId\");\r\n            let st = x.style.fontStyle;\r\n            if(st == 'italic'){\r\n                x.style.fontStyle = 'normal';\r\n                setitalics_text(\"italic\")\r\n            }\r\n            else{\r\n                x.style.fontStyle = 'italic';\r\n                setitalics_text(\"normal\")\r\n            }\r\n        }\r\n        \r\n        const to_upper =()=>{\r\n            let x = document.getElementById(\"textAreaId\");\r\n            x.value = x.value.toUpperCase();\r\n        }\r\n\r\n        const to_lower =()=>{\r\n            let x = document.getElementById(\"textAreaId\");\r\n            x.value = x.value.toLowerCase();\r\n        }\r\n\r\n        let titleCase = (str) => {\r\n            str = str.toLowerCase().split(' ');\r\n            for (var i = 0; i < str.length; i++) {\r\n              str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); \r\n            }\r\n            return str.join(' ');\r\n          }\r\n\r\n        const to_sentence =()=>{\r\n            let x = document.getElementById(\"textAreaId\");\r\n            x.value = titleCase(x.value);\r\n        }\r\n\r\n        const clear_text =() =>{\r\n            let x = document.getElementById(\"textAreaId\");\r\n            x.value = '';\r\n        }\r\n\r\n        // const word_count =() =>{\r\n        \r\n        // }\r\n\r\n        const [WordCount, setWordCount] = useState(0)\r\n\r\n        const WordCountFun = () =>{\r\n            let string_ = document.getElementById(\"textAreaId\").value;\r\n            \r\n            string_ = string_.replace(/\\s+/g, ' ').trim()\r\n\r\n            if(string_.length === 0){\r\n                setWordCount(0);\r\n                return;\r\n            }\r\n            let res = string_.split(' ');\r\n            \r\n            setWordCount(res.length);\r\n        }\r\n\r\n        return (\r\n            <>\r\n        <div style={mystyle} >\r\n            <nav className=\"navbar navbar-expand-lg \" style = {mystyle ,{padding:(0,0,0,0)}} >\r\n            <a className=\"navbar-brand\" href=\"#\"  style = {{fontSize : '40px', margin:0,color : mystyle.nav_textcolor, \r\n                backgroundColor: mystyle.nav_backgroundColor,paddingTop:'0' , paddingRight :'75%'}} >Text Editor Pro</a>\r\n        \r\n            <div className=\"collapse navbar-collapse \"   id=\"navbarSupportedContent\" style = {{backgroundColor:mystyle.nav_backgroundColor}}  >\r\n            <ul className=\"navbar-nav mr-auto\" >\r\n                <li className=\"nav-item dropdown\" >\r\n                \r\n                <a className=\"nav-link dropdown-toggle\"  style={mystyle,{color:mystyle.nav_textcolor,fontSize : '33px', margin:0}}  href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Themes\r\n                </a>\r\n                \r\n                <div className=\"dropdown-menu\" style={{padding:(0,0,0,0)}} aria-labelledby=\"navbarDropdown\" >\r\n                    \r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={to_blue} style={{fontSize:'20px', backgroundColor:'#3b7dd8', color:'white'}}>ocean blues</a>\r\n\r\n                    <a className=\"dropdown-item\" href=\"#\" onClick = {to_yellow} style={{fontSize:'20px', backgroundColor:'#ffd700', color:'white'}}>dizzy yellow</a>\r\n                    \r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={to_green} style={{fontSize:'20px', backgroundColor:'#32cd32', color:'white'}}>cozy green</a>\r\n                    \r\n                    <a className=\"dropdown-item\" href=\"#\" onClick = {to_pink} style={{fontSize:'20px', backgroundColor:'#fe4164', color:'white'}} >rosy trip</a>\r\n                    \r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={to_purple} style={{fontSize:'20px', backgroundColor:'#BF40BF', color:'white'}} >purple vibes</a>\r\n\r\n                    <a className=\"dropdown-item\" href=\"#\" onClick={to_black} style={{fontSize:'20px', backgroundColor:'black', color:'white'}}>classy dark</a>\r\n                </div>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n        \r\n        <div className=\"form-group shadow-textarea container\">\r\n            <label htmlFor=\"exampleFormControlTextarea6\"><br /><br /><br /></label>\r\n            <textarea className=\"form-control z-depth-1\" onChange={WordCountFun}\r\n                style={{color:mystyle.textarea_textcolor, \r\n                    backgroundColor:mystyle.textarea_background, \r\n                    fontSize:'30px' }} \r\n                id=\"textAreaId\" rows=\"10\" \r\n                placeholder=\"Write something here...\" onClick ={handleChange} ></textarea>\r\n        </div>\r\n        \r\n        <div className=\"container my-3 \">\r\n            \r\n            <button type=\"button\" className=\"btn btn-primary btn-lg\" \r\n                    style = {{ backgroundColor: mystyle.nav_backgroundColor}}\r\n                    onClick = {to_bold} ><strong>{bold_text}</strong></button>\r\n\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg mx-2\" \r\n                    style = {{ backgroundColor: mystyle.nav_backgroundColor}}\r\n                    onClick = {to_italics} ><i>{italics_text}</i></button>\r\n\r\n             <button type=\"button\" className=\"btn btn-primary btn-lg mx-2\" \r\n                    style = {{ backgroundColor: mystyle.nav_backgroundColor}}\r\n                    onClick = {to_upper} >UPPERCASE</button>\r\n                   \r\n            <button type=\"button\" className=\"btn btn-primary btn-lg mx-2\" \r\n                    style = {{ backgroundColor: mystyle.nav_backgroundColor}}\r\n                    onClick = {to_lower} >lowerCase</button>\r\n            <button type=\"button\" className=\"btn btn-primary btn-lg mx-2\" \r\n                    style = {{ backgroundColor: mystyle.nav_backgroundColor}}\r\n                    onClick = {to_sentence} >TitleCase</button>\r\n            \r\n             \r\n            <button type=\"button\" className=\"btn btn-primary btn-lg mx-2\" \r\n                    style = {{ backgroundColor: mystyle.nav_backgroundColor}}\r\n                    onClick = {clear_text} >Clear</button> \r\n\r\n        </div>\r\n\r\n        <div className=\"container\" style ={{color:'black', fontSize:'30px'}}>\r\n            <div>Word Count : {WordCount}</div>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport NavBar from './components/NavBar';\n\n\nfunction App() {\n  return (\n    <>\n      <NavBar/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}